@page "/stackoverflow"
@inject HttpClient Http
@using System.Collections.Generic

<div class="flex items-center rounded-full shadow-xl bg-gray-300 transform hover:scale-110">
    <input class="rounded-l-full w-full py-4 px-6 bg-gray-300 text-black leading-tight focus:outline-none" id="search" type="text" placeholder="Search..." @bind="questionTitle">
        <div class="p-4">
        <button class="bg-yellow-600 text-black rounded-full p-2 hover:bg-yellow-400 focus:outline-none w-12 h-12 flex items-center justify-center" @onclick="GetStack">
            <svg class="w-6 h-6 text-black" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
        </button>
      </div>
</div>
@if (searches == null)
{
    
}
else {
@foreach (var stack in searches)
{
    @if (stack.is_answered)
    {
        <p>@stack.accepted_answer_id</p>
    }
    else
    {
        <p>There are no answers...</p>
    }
}
{
    
}
}

@code
{

    public List<StackOverflowSearchObject> searches;
    public string questionTitle;
    

    public async void GetStack(){

        searches = await Http.GetFromJsonAsync<List<StackOverflowSearchObject>>("https://api.stackexchange.com/2.2/search?order=desc&sort=activity&intitle=java&site=stackoverflow");
        StateHasChanged();
    }
    

    public class StackOverflowSearchObject
    {
        public int accepted_answer_id { get; set; }
        public string title { get; set; }
        public bool is_answered { get; set; }
    }
}