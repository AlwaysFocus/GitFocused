@page "/projects"
@inject HttpClient Http

<div class="w-64 bg-gray-400 text-black p-3">
        <div class="flex flex-row justify-between items-center">
            <h1 class="font-semibold text-2xl">Projects</h1>
            
            <ul>
                <li><NavLink href="/stackoverflow">StackOverflow help</NavLink></li>
            </ul>
        </div>
</div>
<div class="p-8 flex flex-col justify-between items-center w-full h-full bg-gray-600">
  <div class="flex items-center rounded-full shadow-xl bg-gray-300 transform hover:scale-110">
    <input class="rounded-l-full w-full py-4 px-6 bg-gray-300 text-black leading-tight focus:outline-none" id="search" type="text" placeholder="Search..." @bind="User">
    <div class="p-4">
      <button class="bg-yellow-600 text-black rounded-full p-2 hover:bg-yellow-400 focus:outline-none w-12 h-12 flex items-center justify-center" @onclick="OnUserSelect">
        <svg class="w-6 h-6 text-black" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
      </button>
      </div>
    </div>
    <div class="my-12 mx-auto px-4 md:px-12">
    <div class="flex flex-wrap -mx-1 lg:-mx-4 h-1/3">
        @if (Repos == null)
        {
    
        }
        else
        {
            @foreach (var repo in Repos)
            {
                         
                <div class="my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3">
                    <article class=" rounded-lg shadow-lg">
                        <img class="w-6 h-6 rounded-full" src="@userInfo.avatar_url">
                        @repo.name
                    </article>
                </div>

            }
        }
    </div>
    </div>
    </div>
  




@code
{
    private FocusProject[] FocusProjects;
    public Repo[] Repos;
    public UserInfo userInfo;

    public string User = "";

    //protected override async Task OnInitializedAsync()
    //{
    //    //FocusProjects = await Http.GetFromJsonAsync<FocusProject[]>("sample-data/projects.json");
    //    //Repos = await Http.GetFromJsonAsync<Repo[]>($"https://api.github.com/users/{User}/repos");
    //    
    //}

    public async void OnUserSelect()
    {
        Console.WriteLine($"The username is {User}");
        Repos = await Http.GetFromJsonAsync<Repo[]>($"https://api.github.com/users/{User}/repos");
        userInfo = await Http.GetFromJsonAsync<UserInfo>($"https://api.github.com/users/{User}");
        User = "";
        StateHasChanged();
    }

    private void createRows()
    {
        // count the number of items in FocusProjects
        
    }
    
    private class FocusProject 
    {
        
        public string name {get; set;}

        public int number {get; set;}
        public bool isDone {get; set;}
    }

    public class Repo 
    {
        public string name {get; set;}
        public string html_url {get; set;}
        public string description {get;set;}
    }

    public class UserInfo
    {
        public string avatar_url { get; set; }
        public string html_url { get; set; }
        public string repos_url { get; set; }
        public string bio { get; set; }
        public int followers { get; set; }
        public int public_repos { get; set; }

    }
}